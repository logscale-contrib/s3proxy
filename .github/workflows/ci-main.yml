name: Main CI
on:
  push:
    branches:
      - "master"
      - "develop"
      - "next"
  pull_request:
    branches:
      - "*"
jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      dockerhub-publish: ${{ steps.dockerhub-publish.outputs.defined }}
      registry: ghcr.io/${{ github.repository }}/container:${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
      container_tags: ${{ steps.docker_action_meta.outputs.tags }}
      container_labels: ${{ steps.docker_action_meta.outputs.labels }}
      container_buildtime: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.created'] }}
      container_version: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
      container_revision: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.revision'] }}
      container_base: ${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
      new_release_version: ${{ steps.version.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: false
          persist-credentials: false
      - id: dockerhub-publish
        if: "${{ env.MY_KEY != '' }}"
        run: echo "::set-output name=defined::true"
        env:
          MY_KEY: ${{ secrets.DOCKER_PASS }}
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Semantic Release
        id: version
        uses: cycjimmy/semantic-release-action@v3.4.2
        with:
          semantic_version: 19
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            @google/semantic-release-replace-plugin
            conventional-changelog-conventionalcommits
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: docker_action_meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          flavor: |
            latest=false
          tags: |
            type=sha,format=long
            type=sha
            type=semver,pattern={{version}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.new_release_version }}
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
          labels: |
            org.opencontainers.image.licenses=Apache-2.0
  runTests:
    runs-on: ubuntu-20.04
    needs: [meta]
    strategy:
      fail-fast: false
      matrix:
        version:
          - 11
          # - 16
          # - 17
        distribution:
          - temurin
          - zulu
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      # These steps are quick and will work or if fail only because of external issues
      - uses: actions/setup-java@v3.11.0
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.version }}
          cache: "maven"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.6"
          cache: "pip"
      - name: Other Test
        run: |
          pip3.6 install six
          pip3.6 install pipenv
      #Run tests
      - name: Maven Set version
        run: |
          mvn versions:set -DnewVersion=${{ needs.meta.outputs.new_release_version }}
      - name: Maven Package
        run: |
          mvn package -DskipTests
      - name: Maven Test
        run: |
          mvn test
      - name: Other Test
        run: |
          ./src/test/resources/run-s3-tests.sh

  publish:
    runs-on: ubuntu-latest
    needs: [runTests, meta]
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-java@v3.11.0
        with:
          distribution: zulu
          java-version: 11
          cache: "maven"
      #Store the target
      - name: Deploy to Github Package Registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "<settings><servers><server><id>github</id><username>OWNER</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
      - name: Semantic Release
        id: version
        uses: cycjimmy/semantic-release-action@v3.4.2
        with:
          semantic_version: 19
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            @google/semantic-release-replace-plugin
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push action
        if: steps.version.outputs.new_release_published == 'true'
        id: docker_action_build
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ needs.meta.outputs.container_base }}
          labels: ${{ needs.meta.outputs.container_labels }}
          build-args: |
            BUILDTIME=${{ needs.meta.outputs.container_buildtime }}
            VERSION=${{ needs.meta.outputs.container_version }}
            REVISION=${{ needs.meta.outputs.container_revision }}
          # cache-from: type=registry,ref=${{ needs.meta.outputs.container_base }}
          cache-to: type=inline
      - uses: actions/upload-artifact@v3
        with:
          name: s3proxy
          path: target/s3proxy
      - uses: actions/upload-artifact@v3
        with:
          name: pom
          path: pom.xml
